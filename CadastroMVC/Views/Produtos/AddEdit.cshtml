@model CadastroLivroMVC.ViewModels.Produto.AddEdit.ProdutoAddEditVM

@{
    ViewBag.Title = $"{(Model.Id == 0 ? "Adicionar" : "editar ")} Produto";
}

<h2>@ViewBag.Title</h2>

<form method="post">


    <div class="mb-1">
        <label for="txtNome">Nome:</label>
        @Html.TextBoxFor(m => m.Nome, new { @class = "form-control", autofocus = "" })
        <small>
            @Html.ValidationMessageFor(m => m.Nome, null, new { @class = "text-danger" })
        </small>
    </div>

    <div class="mb-3">
        <label>Preço:</label>
        @Html.TextBoxFor(m => m.Preco, new { @class = "form-control", })
        <small>
            @Html.ValidationMessageFor(m => m.Preco, null, new { @class = "text-danger" })
        </small>
    </div>

    <div class="mb-3">
        <label>Tipo:</label>
        @Html.DropDownListFor(m => m.TipoDeProdutoId, new SelectList(ViewBag.Tipo, "Id", "Nome"), "Selecione...",
       new { @class = "form-control" })
        <small>
            @Html.ValidationMessageFor(m => m.TipoDeProdutoId, null, new { @class = "text-danger" })
        </small>
    </div>

    <div class="mb-3">
        <label>Quantidade:</label>
        @Html.TextBoxFor(m => m.Qtde, new { @class = "form-control", })
        <small>
            @Html.ValidationMessageFor(m => m.Qtde, null, new { @class = "text-danger" })
        </small>
    </div>

    <div>
        @Html.ValidationSummary(true)
    </div>
    <div class="form-group">
        <button class="btn btn-outline-secondary">Salvar</button>
        <a class="btn btn-outline-info" href="@Url.Action("Index")">Cancelar</a>
    </div>

</form>
@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/Bootstrap.validate.js"></script>
}